<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= title %> | Football Hub</title>

  <!-- Bootstrap + Font Awesome + AOS + Google Fonts -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">

  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
      --warning-gradient: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
      --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
      --glass-bg: rgba(255, 255, 255, 0.25);
      --glass-border: rgba(255, 255, 255, 0.18);
      --text-primary: #2d3748;
      --text-secondary: #718096;
      --bg-primary: #f7fafc;
      --shadow-light: 0 4px 20px rgba(0, 0, 0, 0.08);
      --shadow-medium: 0 8px 40px rgba(0, 0, 0, 0.12);
      --shadow-heavy: 0 20px 60px rgba(0, 0, 0, 0.15);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      font-family: 'Inter', sans-serif;
      color: var(--text-primary);
      min-height: 100vh;
      position: relative;
    }

    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);
      pointer-events: none;
      z-index: -1;
    }

    .main-content {
      background: var(--bg-primary);
      min-height: 100vh;
      border-radius: 2rem 2rem 0 0;
      margin-top: 1rem;
      position: relative;
      overflow: hidden;
    }

    .main-content::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 200px;
      background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
      z-index: 0;
    }

    .content-wrapper {
      position: relative;
      z-index: 1;
    }

    /* Hero Section */
    .hero-section {
      background: transparent;
      padding: 4rem 0 3rem;
      text-align: center;
      position: relative;
    }

    .hero-title {
      font-family: 'Poppins', sans-serif;
      font-size: 3rem;
      font-weight: 800;
      background: var(--warning-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 1rem;
      text-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .hero-subtitle {
      font-size: 1.25rem;
      color: var(--text-secondary);
      font-weight: 500;
      margin-bottom: 2rem;
    }

    .action-buttons {
      display: flex;
      justify-content: center;
      gap: 1rem;
      flex-wrap: wrap;
    }

    /* Current Info Display */
    .current-info {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-radius: 2rem;
      padding: 2.5rem;
      margin-bottom: 2rem;
      box-shadow: var(--shadow-medium);
      border: 1px solid rgba(255, 255, 255, 0.2);
      position: relative;
      overflow: hidden;
    }

    .current-info::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: var(--primary-gradient);
    }

    .current-image {
      width: 150px;
      height: 150px;
      object-fit: cover;
      border-radius: 50%;
      border: 4px solid white;
      box-shadow: var(--shadow-medium);
      transition: all 0.3s ease;
    }

    .current-image:hover {
      transform: scale(1.1);
      box-shadow: var(--shadow-heavy);
    }

    .current-title {
      font-family: 'Poppins', sans-serif;
      font-size: 1.8rem;
      font-weight: 700;
      color: var(--text-primary);
      margin-bottom: 1rem;
    }

    .current-detail {
      display: flex;
      align-items: center;
      margin-bottom: 0.75rem;
      font-size: 1.1rem;
    }

    .current-detail i {
      width: 20px;
      margin-right: 0.75rem;
    }

    /* Form Container */
    .form-container {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-radius: 2rem;
      padding: 3rem;
      box-shadow: var(--shadow-medium);
      border: 1px solid rgba(255, 255, 255, 0.2);
      position: relative;
      overflow: hidden;
    }

    .form-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: var(--warning-gradient);
    }

    .form-title {
      font-family: 'Poppins', sans-serif;
      font-size: 1.5rem;
      font-weight: 700;
      color: var(--text-primary);
      margin-bottom: 2rem;
      text-align: center;
    }

    /* Form Elements */
    .form-label {
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.5rem;
      font-size: 0.95rem;
    }

    .form-label i {
      margin-right: 0.5rem;
      width: 16px;
    }

    .required {
      color: #e53e3e;
    }

    .form-control, .form-select {
      border: 2px solid #e2e8f0;
      border-radius: 1rem;
      padding: 1rem 1.5rem;
      font-size: 1rem;
      transition: all 0.3s ease;
      background: white;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .form-control:focus, .form-select:focus {
      border-color: #43e97b;
      box-shadow: 0 0 0 3px rgba(67, 233, 123, 0.1);
      transform: translateY(-2px);
    }

    .form-text {
      color: var(--text-secondary);
      font-size: 0.875rem;
      margin-top: 0.5rem;
    }

    /* Image Preview */
    .image-preview-container {
      position: relative;
      margin-top: 1rem;
    }

    .image-preview {
      max-width: 250px;
      max-height: 250px;
      width: 100%;
      object-fit: cover;
      border-radius: 1rem;
      box-shadow: var(--shadow-light);
      transition: all 0.3s ease;
    }

    .image-preview:hover {
      transform: scale(1.05);
      box-shadow: var(--shadow-medium);
    }

    /* Captain Switch */
    .captain-container {
      background: rgba(255, 215, 0, 0.1);
      border-radius: 1rem;
      padding: 1.5rem;
      border: 2px solid rgba(255, 215, 0, 0.3);
      position: relative;
      margin-bottom: 2rem;
    }

    .captain-container::before {
      content: 'ðŸ‘‘';
      position: absolute;
      top: -10px;
      right: 20px;
      background: white;
      padding: 0.5rem;
      border-radius: 50%;
      font-size: 1.2rem;
    }

    .form-check-input {
      width: 3rem;
      height: 1.5rem;
      border-radius: 1rem;
      background-color: #e2e8f0;
      border: none;
      transition: all 0.3s ease;
    }

    .form-check-input:checked {
      background: var(--warning-gradient);
      border-color: transparent;
    }

    .form-check-input:focus {
      box-shadow: 0 0 0 3px rgba(255, 215, 0, 0.3);
    }

    .form-check-label {
      font-weight: 600;
      color: var(--text-primary);
      margin-left: 1rem;
    }

    /* Textarea */
    textarea.form-control {
      resize: vertical;
      min-height: 120px;
    }

    /* Action Buttons */
    .btn {
      border-radius: 50px;
      font-weight: 600;
      padding: 0.75rem 1.5rem;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .btn-submit {
      background: var(--warning-gradient);
      border: none;
      color: #2d3748;
      box-shadow: var(--shadow-medium);
      padding: 1rem 3rem;
      font-size: 1.1rem;
    }

    .btn-submit:hover {
      transform: translateY(-3px);
      box-shadow: var(--shadow-heavy);
      color: #2d3748;
    }

    .btn-primary {
      background: var(--primary-gradient);
      border: none;
      color: white;
    }

    .btn-info {
      background: var(--success-gradient);
      border: none;
      color: white;
    }

    .btn-secondary {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(20px);
      border: 2px solid #e2e8f0;
      color: var(--text-primary);
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-light);
    }

    .btn-primary:hover, .btn-info:hover {
      color: white;
    }

    .btn-secondary:hover {
      color: var(--text-primary);
      border-color: #cbd5e0;
    }

    /* Loading State */
    .loading {
      position: relative;
      pointer-events: none;
      opacity: 0.7;
    }

    .loading::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 20px;
      height: 20px;
      margin: -10px 0 0 -10px;
      border: 2px solid #2d3748;
      border-radius: 50%;
      border-top-color: transparent;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    /* Badge Styles */
    .status-badge {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-weight: 600;
      font-size: 0.9rem;
    }

    .captain-badge {
      background: var(--warning-gradient);
      color: #2d3748;
    }

    .player-badge {
      background: rgba(113, 128, 150, 0.2);
      color: var(--text-secondary);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .hero-title {
        font-size: 2rem;
      }
      
      .form-container, .current-info {
        padding: 2rem 1.5rem;
      }
      
      .action-buttons {
        flex-direction: column;
        align-items: center;
      }
      
      .btn {
        width: 100%;
        max-width: 250px;
      }
      
      .current-image {
        width: 120px;
        height: 120px;
      }
      
      .current-detail {
        font-size: 1rem;
      }
      
      .image-preview {
        max-width: 200px;
        height: 150px;
      }
    }

    /* Form Validation Styles */
    .is-invalid {
      border-color: #e53e3e !important;
      box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.1) !important;
    }

    .is-valid {
      border-color: #38a169 !important;
      box-shadow: 0 0 0 3px rgba(56, 161, 105, 0.1) !important;
    }

    .invalid-feedback {
      color: #e53e3e;
      font-size: 0.875rem;
      margin-top: 0.5rem;
    }

    .valid-feedback {
      color: #38a169;
      font-size: 0.875rem;
      margin-top: 0.5rem;
    }
  </style>
</head>
<body>
  <%- include('../partials/navbar') %>
  
  <div class="main-content">
    <div class="content-wrapper">
      <!-- Hero Section -->
      <section class="hero-section">
        <div class="container">
          <div class="row align-items-center">
            <div class="col-lg-8 mx-auto text-center">
              <h1 class="hero-title" data-aos="fade-up">
                <i class="fas fa-edit me-3"></i>Edit Player
              </h1>
              <p class="hero-subtitle" data-aos="fade-up" data-aos-delay="100">
                Update <%= player.playerName %>'s information
              </p>
              <div class="action-buttons" data-aos="fade-up" data-aos-delay="200">
                <a href="/players" class="btn btn-primary">
                  <i class="fas fa-arrow-left me-2"></i>Back to List
                </a>
                <a href="/players/<%= player._id %>" class="btn btn-info">
                  <i class="fas fa-eye me-2"></i>View Player
                </a>
              </div>
            </div>
          </div>
        </div>
      </section>

      <div class="container">
        <%- include('../partials/alerts') %>
        
        <div class="row justify-content-center">
          <div class="col-lg-8">
            <!-- Current Info Display -->
            <div class="current-info" data-aos="fade-up" data-aos-delay="300">
              <h3 class="text-center mb-4">
                <i class="fas fa-info-circle text-primary me-2"></i>
                Current Player Information
              </h3>
              <div class="row align-items-center">
                <div class="col-md-4 text-center mb-3 mb-md-0">
                  <img src="<%= player.image %>" 
                       class="current-image" 
                       alt="<%= player.playerName %>"
                       onerror="this.src='https://ui-avatars.com/api/?name=<%= player.playerName %>&size=150&background=667eea&color=ffffff&font-size=0.4'">
                </div>
                <div class="col-md-8">
                  <h4 class="current-title"><%= player.playerName %></h4>
                  <div class="current-detail">
                    <i class="fas fa-shield-alt text-primary"></i>
                    <strong>Team:</strong> <%= player.team.teamName %>
                  </div>
                  <div class="current-detail">
                    <i class="fas fa-dollar-sign text-success"></i>
                    <strong>Market Value:</strong> $<%= player.cost.toLocaleString() %>
                  </div>
                  <div class="current-detail">
                    <% if (player.isCaptain) { %>
                      <span class="status-badge captain-badge">
                        <i class="fas fa-crown"></i>
                        Team Captain
                      </span>
                    <% } else { %>
                      <span class="status-badge player-badge">
                        <i class="fas fa-user"></i>
                        Regular Player
                      </span>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Edit Form -->
            <div class="form-container" data-aos="fade-up" data-aos-delay="400">
              <h2 class="form-title">
                <i class="fas fa-edit me-2" style="color: #43e97b;"></i>
                Update Player Information
              </h2>
              
              <form id="editPlayerForm" action="/players/<%= player._id %>?_method=PUT" method="POST" novalidate>
                <div class="row">
                  <!-- Player Name -->
                  <div class="col-md-6 mb-4">
                    <label for="playerName" class="form-label">
                      <i class="fas fa-user text-primary"></i>
                      Player Name <span class="required">*</span>
                    </label>
                    <input type="text" 
                           class="form-control" 
                           id="playerName" 
                           name="playerName" 
                           value="<%= player.playerName %>"
                           placeholder="Enter player's full name"
                           required>
                    <div class="invalid-feedback">
                      Please provide a valid player name.
                    </div>
                  </div>
                  
                  <!-- Cost -->
                  <div class="col-md-6 mb-4">
                    <label for="cost" class="form-label">
                      <i class="fas fa-dollar-sign text-primary"></i>
                      Market Value <span class="required">*</span>
                    </label>
                    <input type="number" 
                           class="form-control" 
                           id="cost" 
                           name="cost" 
                           value="<%= player.cost %>"
                           placeholder="Enter market value"
                           min="0"
                           step="0.01"
                           required>
                    <div class="form-text">
                      <i class="fas fa-info-circle me-1"></i>
                      Enter the player's current market value in USD.
                    </div>
                    <div class="invalid-feedback">
                      Please provide a valid cost amount.
                    </div>
                  </div>
                  
                  <!-- Team -->
                  <div class="col-12 mb-4">
                    <label for="team" class="form-label">
                      <i class="fas fa-shield-alt text-primary"></i>
                      Team <span class="required">*</span>
                    </label>
                    <select class="form-select" id="team" name="team" required>
                      <option value="">Choose a team...</option>
                      <% teams.forEach(team => { %>
                        <option value="<%= team._id %>" <%= player.team._id.toString() === team._id.toString() ? 'selected' : '' %>>
                          <%= team.teamName %>
                        </option>
                      <% }) %>
                    </select>
                    <div class="invalid-feedback">
                      Please select a team.
                    </div>
                  </div>
                  
                  <!-- Player Image -->
                  <div class="col-12 mb-4">
                    <label for="image" class="form-label">
                      <i class="fas fa-image text-primary"></i>
                      Player Image URL <span class="required">*</span>
                    </label>
                    <input type="url" 
                           class="form-control" 
                           id="image" 
                           name="image" 
                           value="<%= player.image %>"
                           placeholder="https://example.com/player-image.jpg"
                           required>
                    <div class="form-text">
                      <i class="fas fa-info-circle me-1"></i>
                      Enter a valid image URL. The image will be displayed in the player profile.
                    </div>
                    <div class="invalid-feedback">
                      Please provide a valid image URL.
                    </div>
                    
                    <div class="image-preview-container">
                      <img id="imagePreview" class="image-preview d-none" alt="Image Preview">
                    </div>
                  </div>
                  
                  <!-- Player Information -->
                  <div class="col-12 mb-4">
                    <label for="information" class="form-label">
                      <i class="fas fa-info-circle text-primary"></i>
                      Player Biography <span class="required">*</span>
                    </label>
                    <textarea class="form-control" 
                              id="information" 
                              name="information" 
                              rows="5" 
                              placeholder="Enter detailed information about the player's career, achievements, playing style, and background..."
                              required><%= player.information %></textarea>
                    <div class="form-text">
                      <i class="fas fa-info-circle me-1"></i>
                      Provide comprehensive information including position, skills, career highlights, and personal background.
                    </div>
                    <div class="invalid-feedback">
                      Please provide player information.
                    </div>
                  </div>
                  
                  <!-- Captain Status -->
                  <div class="col-12 mb-4">
                    <label class="form-label d-block">
                      <i class="fas fa-crown text-warning"></i>
                      Leadership Role
                    </label>
                    <div class="captain-container">
                      <div class="form-check form-switch">
                        <input class="form-check-input" 
                               type="checkbox" 
                               id="isCaptain" 
                               name="isCaptain" 
                               value="true"
                               <%= player.isCaptain ? 'checked' : '' %>>
                        <label class="form-check-label" for="isCaptain">
                          Team Captain
                        </label>
                      </div>
                      <div class="form-text mt-2">
                        <i class="fas fa-info-circle me-1"></i>
                        Check if this player is the team captain.
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Action Buttons -->
                <div class="text-center">
                  <button type="submit" class="btn btn-submit me-3" id="submitBtn">
                    <i class="fas fa-save me-2"></i>Update Player
                  </button>
                  <a href="/players/<%= player._id %>" class="btn btn-info me-2">
                    <i class="fas fa-eye me-2"></i>View Player
                  </a>
                  <a href="/players" class="btn btn-secondary">
                    <i class="fas fa-times me-2"></i>Cancel
                  </a>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
  
  <script>
    // Initialize AOS
    AOS.init({
      duration: 800,
      easing: 'ease-out-cubic',
      once: true,
      offset: 100
    });

    // Form elements
    const form = document.getElementById('editPlayerForm');
    const imageInput = document.getElementById('image');
    const imagePreview = document.getElementById('imagePreview');
    const submitBtn = document.getElementById('submitBtn');
    const costInput = document.getElementById('cost');

    // Image preview functionality
    imageInput.addEventListener('input', function() {
      const imageUrl = this.value.trim();
      
      if (imageUrl && imageUrl !== '<%= player.image %>' && isValidUrl(imageUrl)) {
        // Create a new image to test if URL is valid
        const testImage = new Image();
        testImage.onload = function() {
          imagePreview.src = imageUrl;
          imagePreview.classList.remove('d-none');
          imageInput.classList.remove('is-invalid');
          imageInput.classList.add('is-valid');
        };
        testImage.onerror = function() {
          imagePreview.classList.add('d-none');
          imageInput.classList.add('is-invalid');
          imageInput.classList.remove('is-valid');
        };
        testImage.src = imageUrl;
      } else if (imageUrl === '<%= player.image %>') {
        imagePreview.classList.add('d-none');
        imageInput.classList.remove('is-invalid', 'is-valid');
      } else {
        imagePreview.classList.add('d-none');
        if (imageUrl) {
          imageInput.classList.add('is-invalid');
          imageInput.classList.remove('is-valid');
        } else {
          imageInput.classList.remove('is-invalid', 'is-valid');
        }
      }
    });

    // URL validation function
    function isValidUrl(string) {
      try {
        new URL(string);
        return true;
      } catch (_) {
        return false;
      }
    }

    // Cost input formatting
    costInput.addEventListener('input', function() {
      let value = this.value.replace(/[^\d.]/g, '');
      if (value && !isNaN(value)) {
        this.classList.remove('is-invalid');
        this.classList.add('is-valid');
      } else if (value) {
        this.classList.add('is-invalid');
        this.classList.remove('is-valid');
      } else {
        this.classList.remove('is-invalid', 'is-valid');
      }
    });

    // Real-time form validation
    const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');
    inputs.forEach(input => {
      input.addEventListener('blur', validateField);
      input.addEventListener('input', function() {
        if (this.classList.contains('is-invalid')) {
          validateField.call(this);
        }
      });
    });

    function validateField() {
      const field = this;
      const value = field.value.trim();
      
      if (field.hasAttribute('required') && !value) {
        field.classList.add('is-invalid');
        field.classList.remove('is-valid');
        return false;
      }
      
      if (field.type === 'url' && value && !isValidUrl(value)) {
        field.classList.add('is-invalid');
        field.classList.remove('is-valid');
        return false;
      }
      
      if (field.type === 'number' && value && (isNaN(value) || parseFloat(value) < 0)) {
        field.classList.add('is-invalid');
        field.classList.remove('is-valid');
        return false;
      }
      
      field.classList.remove('is-invalid');
      field.classList.add('is-valid');
      return true;
    }

    // Form submission with validation
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Validate all fields
      let isValid = true;
      inputs.forEach(input => {
        if (!validateField.call(input)) {
          isValid = false;
        }
      });
      
      if (!isValid) {
        // Focus on first invalid field
        const firstInvalid = form.querySelector('.is-invalid');
        if (firstInvalid) {
          firstInvalid.focus();
          firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
        return;
      }
      
      // Show loading state
      const originalText = submitBtn.innerHTML;
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Updating Player...';
      submitBtn.disabled = true;
      submitBtn.classList.add('loading');
      
      // Submit form
      this.submit();
    });

    // Auto-save to localStorage
    function saveFormData() {
      const formData = {
        playerName: document.getElementById('playerName').value,
        team: document.getElementById('team').value,
        image: document.getElementById('image').value,
        cost: document.getElementById('cost').value,
        isCaptain: document.getElementById('isCaptain').checked,
        information: document.getElementById('information').value
      };
      localStorage.setItem('editPlayerFormData', JSON.stringify(formData));
    }

    // Save data on input
    inputs.forEach(input => {
      input.addEventListener('input', saveFormData);
    });

    // Clear saved data on successful submission
    form.addEventListener('submit', function() {
      setTimeout(() => {
        localStorage.removeItem('editPlayerFormData');
      }, 1000);
    });

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
      // Ctrl+S to save (prevent default and focus on submit)
      if (e.ctrlKey && e.key === 's') {
        e.preventDefault();
        submitBtn.focus();
      }
      
      // Escape to cancel
      if (e.key === 'Escape') {
        if (confirm('Are you sure you want to cancel editing? Any unsaved changes will be lost.')) {
          window.location.href = `/players/<%= player._id %>`;
        }
      }
    });

    // Warn before leaving page with unsaved changes
    let formChanged = false;
    inputs.forEach(input => {
      input.addEventListener('change', function() {
        formChanged = true;
      });
    });

    window.addEventListener('beforeunload', function(e) {
      if (formChanged) {
        e.preventDefault();
        e.returnValue = '';
      }
    });

    // Reset form changed flag on submit
    form.addEventListener('submit', function() {
      formChanged = false;
    });
  </script>
  
  <%- include('../partials/scripts') %>
</body>
</html>